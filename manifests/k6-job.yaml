
apiVersion: batch/v1
kind: Job
metadata:
  name: k6-loadgen
  namespace: {{ monitoring_ns }}
spec:
  template:
    spec:
      restartPolicy: Never
      containers:
        - name: k6
          image: grafana/k6:0.49.0
          command: ["/bin/sh","-lc"]
          args:
            - |
              cat <<'EOS' > /tmp/test.js
              import http from 'k6/http';
              import { check, sleep } from 'k6';
              export const options = {
                stages: [
                  { duration: '30s', target: 50 },
                  { duration: '1m', target: 200 },
                  { duration: '30s', target: 0 },
                ],
                thresholds: {
                  http_req_failed: ['rate<0.05'],
                  http_req_duration: ['p(95)<500','p(99)<1200'],
                },
              };
              const url = __ENV.TARGET_URL || 'http://api-gateway.petclinic.svc.cluster.local/actuator/health';
              export default function () {
                const res = http.get(url);
                check(res, { 'status is 2xx/3xx': (r) => r.status >= 200 && r.status < 400 });
                sleep(0.2);
              }
              EOS
              exec k6 run /tmp/test.js
